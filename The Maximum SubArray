import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

public class Solution {

    // Complete the maxSubarray function below.
    static int[] maxSubarray(int[] arr) {
        boolean isAllPositive = false;
        //System.out.println(isAllPositive);
        // Kadane's Alogrithm
        int A = arr[0], B = arr[0], l = arr.length;
        for(int i = 1; i < l; i++){
            if(arr[i] > 0){
                isAllPositive = true;
            }
            B = Math.max(B, B+arr[i]);
            A = Math.max(A, B);
        }
        //System.out.println("Maximum Contiguous Sub Array Sum = " + A);

        List<Integer> list = new ArrayList<>();
        for(int i = 0; i < l; i++){
            list.add(arr[i]);
            int sum = arr[i];
            for(int j = i+1; j < l; j++){
                sum += arr[j];
                list.add(sum); 
            }
        }
        int len = list.size();
        int max = Integer.MIN_VALUE;
        for(int i = 0; i < len; i++){
            if(max < list.get(i)){
                max = list.get(i);
            }
        }
        //Collections.sort(list);
        
        //System.out.println(isAllPositive);
        
        if(isAllPositive){
            return new int[]{max, A};
        }
        return new int[]{max,max};
    }

    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) throws IOException {
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int t = scanner.nextInt();
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        for (int tItr = 0; tItr < t; tItr++) {
            int n = scanner.nextInt();
            scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

            int[] arr = new int[n];

            String[] arrItems = scanner.nextLine().split(" ");
            scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

            for (int i = 0; i < n; i++) {
                int arrItem = Integer.parseInt(arrItems[i]);
                arr[i] = arrItem;
            }

            int[] result = maxSubarray(arr);

            for (int i = 0; i < result.length; i++) {
                bufferedWriter.write(String.valueOf(result[i]));

                if (i != result.length - 1) {
                    bufferedWriter.write(" ");
                }
            }

            bufferedWriter.newLine();
        }

        bufferedWriter.close();

        scanner.close();
    }
}
