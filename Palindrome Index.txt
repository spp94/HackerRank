import java.io.*; 
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

public class Solution 
{

    static boolean isPalin(String s)
    {
        boolean flag = true;
        for(int i = 0; i < s.length()/2; i++)
        {
            if(s.charAt(i) == s.charAt(s.length()-1-i))
            {
                continue;
            }
            else
            {
                flag = false;
                break;
            }
        }
        return flag;
    }
    // Complete the palindromeIndex function below.
    static int palindromeIndex(String s) 
    {
        if(isPalin(s))
        {
            return -1;
        }
        else
        {
            for(int i = 0; i < s.length(); i++)
            {
                String temp = s.substring(0,i)+s.substring(i+1);
                //System.out.println(temp);
                if(isPalin(temp))
                {
                    //System.out.println("YES");
                    return i;
                }
                else
                {
                    continue;
                }
            }
        }
        return -1;
    }

    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) throws IOException {
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int q = scanner.nextInt();
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        for (int qItr = 0; qItr < q; qItr++) {
            String s = scanner.nextLine();

            int result = palindromeIndex(s);

            bufferedWriter.write(String.valueOf(result));
            bufferedWriter.newLine();
        }

        bufferedWriter.close();

        scanner.close();
    }
}
