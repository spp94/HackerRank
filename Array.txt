public class Array{
	private int[] items;
	private int count;
	
	public Array(int size){
		items = new int[size];
	}
	
	private boolean isFull(){
		return count == items.length;
	}
	
	private void resizeIfRequired(){
		if(isFull()){
			int[] temp = new int[count*2];
			for(int i = 0; i < count; i++){
				temp[i] = items[i];
			}
			items = temp;
		}
		else{
			// do nothing
		}
	}
	
	public void insert(int item){
		resizeIfRequired();
		items[count++] = item;
	}
	
	private void isValidIndex(int index){
		if(index < 0 && index > count){
			throw new IllegalArgumentException();
		}
		else{
			return;
		}
	}
	
	public void insert(int item, int index){
		isValidIndex(index);
		for(int i = count-1; i >= index; i--){
			items[i+1] = items[i];
		}
		items[index] = item;
		count++;
	}
	
	public void remove(){
		items[--count] = 0; 
	}
	
	public void remove(int index){
		isValidIndex(index);
		for(int i = index; i < count-1; i++){
			items[i] = items[i+1];
		}
		count--;
	}
	
	public void print(){
		for(int i = 0; i < count; i++){
			System.out.print(items[i]+" ");
		}
		System.out.println();
	}
	
	public int indexOf(int item){
		for(int i = 0; i < count; i++){
			if(items[i] == item){
				return i;
			}
		}
		return -1;
	}
	
	public boolean contains(int item){
		return indexOf(item) != -1;
	}
	
	
	public Array intersection(Array other){
		Array intersection = new Array(Math.min(other.count, this.count));
		for(int item : items){
			if(other.contains(item)){
				intersection.insert(item);
			}
		}
		return intersection;
	}
}
