import java.io.*; 
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

public class Solution {

    // Complete the flatlandSpaceStations function below.
    static int flatlandSpaceStations(int n, int[] c) {
        int[] flag = new int[n];
       int[] distance = new int[n];
       if(n == c.length)
       {
           return 0;
       }
       else if(n == c.length-1)
       {
           return 1;
       }
       else
       {
        for(int i = 0; i < c.length; i++)
        {
           flag[c[i]] = 1;
        }
        for(int i = 0; i < n; i++)
        {
            int current = flag[i];
            int max_left = 0, max_right = 0;
            for(int j = i; j >= 0; j--)
            {
                if(flag[j] == 1)
                {
                    max_left = i-j;
                    break;
                }
            }
            for(int j = i; j < n; j++)
            {
                if(flag[j] == 1)
                {
                    max_right = j-i;
                    break;
                }
            }
            if(max_left == 0 && max_right != 0)
                distance[i] = max_right;
            else if(max_right == 0 && max_left != 0)
                distance[i] = max_left;
            else
                distance[i] = Math.min(max_left,max_right);
        }
        System.out.println();
        Arrays.sort(distance);
        return distance[n-1];
       }
    }

    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) throws IOException {
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        String[] nm = scanner.nextLine().split(" ");

        int n = Integer.parseInt(nm[0]);

        int m = Integer.parseInt(nm[1]);

        int[] c = new int[m];

        String[] cItems = scanner.nextLine().split(" ");
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        for (int i = 0; i < m; i++) {
            int cItem = Integer.parseInt(cItems[i]);
            c[i] = cItem;
        }

        int result = flatlandSpaceStations(n, c);

        bufferedWriter.write(String.valueOf(result));
        bufferedWriter.newLine();

        bufferedWriter.close();

        scanner.close();
    }
}
